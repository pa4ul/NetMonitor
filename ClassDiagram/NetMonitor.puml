@startuml

class MonitorInstance{
    + Id: int
    + Guid : Guid
    + Name: string
    + Hosts : List<Host>
    ---
    + Monitor(string name)
    + AddHost(Host host)
    + RemoveHost(Host host)
    + CurrentQuantity()
}

class Host <<aggregate>>{
    +Id: int
    +Hostname: string
    +Alias: string?
    +IPAddress: string
    +Description: Description
    +ServicesInUse: IReadOnlyCollection<Service>
    ---
    +Host(string hostname, string ipadress, Description description)
    +AddService(Service service)
    +RemoveService(Service service)
    +CurrentQuantity()
    +CurrentSetup()
}
class Service<<aggregate>>{
    +Id: int
    +Host: Host
    +NormalInterval: int
    +RetryInterval: int
    +Description: Description
    +Messages: IReadOnlyCollection<Message>
    ---
    +Service(Host host, int ninterval, int rinterval, Description description)
    +AddMessage(Message m)
    +LastProducedMessage()
    +ProduceWarning(Host h, Service s, Description d, int p, bool r)
    +MessagesProduced()
}
class Message{
    +Id: int
    +Host: Host
    +Service: Service
    +Description: Description
    +Date: DateTime
    ---
    +Message(Host host, Service service, Description description)
    +RetrieveInformation()
}
class CustomService{
    +Command: string
    ---
    +CustomService(Service s, string command)
}

class PlugIn{
    +Name: string
    +URL: string
    ---
    +Plugin(Service s, string name, string url)
}

class Description <<value object>>{
    +Description: string
    +DescriptionLong: string?
}

class Warning{
    +Priority: int
    +Reviewed: bool
    +ReviewedDate: DateTime
    ---
    +Warning(Message m, int priority, bool reviewed)
    +ReviewWarning(bool state, DateTime date)
}

MonitorInstance --> Host

Host *--> Description
Service *--> Description
Warning *--> Description
Message *--> Description

Message <--o Service
Service <--o Host

Message --> Host

Warning -up-|> Message
CustomService -up-|> Service
PlugIn -up-|> Service


@enduml